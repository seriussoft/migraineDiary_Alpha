@model MigraineDiaryMVC.ViewModels.EditableMigraineViewModel
@*@model SeriusSoft.MigraineDiaryMVC.MigraineModels.MigraineModel*@

@{
	ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
	@Html.ValidationSummary(true)

	<fieldset>
		<legend>MigraineModel</legend>

		@*<div clasbeyos="editor-label">
			@Html.LabelFor(model => model.DateStarted)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.DateStarted)
			@Html.ValidationMessageFor(model => model.DateStarted)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.TimeStarted)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.TimeStarted)
			@Html.ValidationMessageFor(model => model.TimeStarted)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.StillHappening)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.StillHappening)
			@Html.ValidationMessageFor(model => model.StillHappening)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.TimeEnded)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.TimeEnded)
			@Html.ValidationMessageFor(model => model.TimeEnded)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.Severity)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Severity)
			@Html.ValidationMessageFor(model => model.Severity)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.Comment)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Comment)
			@Html.ValidationMessageFor(model => model.Comment)
		</div>*@

		<table id="newModelTable">

			<tr>
				<td class="editor-label">
					@Html.LabelFor(model => model.DateStarted)
				</td>
				<td class="editor-field">
					@Html.EditorFor(model => model.DateStarted)
					@Html.ValidationMessageFor(model => model.DateStarted)
				</td>
			</tr>

			<tr>
				<td class="editor-label">
					@Html.LabelFor(model => model.TimeStarted)
				</td>
				<td class="editor-field">
					@Html.EditorFor(model => model.TimeStarted)
					@Html.ValidationMessageFor(model => model.TimeStarted)
				</td>
			</tr>

			<tr>
				<td class="editor-label">
					@Html.LabelFor(model => model.StillHappening)
				</td>
				<td class="editor-field">
					@Html.EditorFor(model => model.StillHappening)
					@Html.ValidationMessageFor(model => model.StillHappening)
				</td>
			</tr>

			<tr class="hideableRow">
				<td class="editor-label">
					@Html.LabelFor(model => model.TimeEnded)
				</td>
				<td class="editor-field">
						@Html.EditorFor(model => model.TimeEnded, new { size = "4" })
						@Html.ValidationMessageFor(model => model.TimeEnded)
				</td>
			</tr>

			<tr>
				<td class="editor-label">
					@Html.LabelFor(model => model.Severity)
				</td>
				<td class="editor-field">
					@Html.EditorFor(model => model.Severity)
					@Html.ValidationMessageFor(model => model.Severity)
				</td>
			</tr>

			<tr>
				<td class="editor-label">
					@Html.LabelFor(model => model.Comment)
				</td>
				<td class="editor-field">
					@Html.EditorFor(model => model.Comment)
					@Html.ValidationMessageFor(model => model.Comment)
				</td>
			</tr>
		</table>

		<p>
			<input type="submit" value="Create" />
		</p>
	</fieldset>
}

<script type="text/javascript">
	$(document).ready(function () {
		var checkBox = $("#@Html.NameFor(model => model.StillHappening)");
		$("#newModelTable tr.hideableRow").toggle(!checkBox.checked);

		$("#@Html.NameFor(model => model.StillHappening)").change(function () {
			var self = this;
			$("#newModelTable tr.hideableRow").toggle(!self.checked);
		});
	});
</script>

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}